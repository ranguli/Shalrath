name: CI
on:
  push:
    branches:
      - '*'

jobs:
  build_and_test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
        c_compiler:
          - gcc
          - clang
          - cl
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies on Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install -y qt6-base-dev qt6-base-dev-tools qt6-tools-dev libgl1-mesa-dev libglu1-mesa-dev

      - name: Install Qt on Windows (x64)
        if: matrix.os == 'windows-latest'
        uses: jurplel/install-qt-action@v3
        with:
          version: 6.2.4
          arch: win64_msvc2019_64

      - name: Configure CMake
        run: >
          cmake -B build -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} -DCMAKE_BUILD_TYPE=Release
          -S ${{ github.workspace }}

      - name: Build
        run: cmake --build build --config Release

      - name: Lint
        run: ./clang-tidy.sh

      - name: Run Tests (Linux)
        if: runner.os != 'Windows'
        working-directory: build
        run: ./tests/run_tests
      - name: Run Tests (Windows)
        if: runner.os == 'Windows'
        working-directory: build
        run: .\tests\Release\run_tests.exe

  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install clang-format
        run: sudo apt-get update && sudo apt-get install -y clang-format
      - name: Run clang-format
        run: |
          find . -name '*.cpp' -o -name '*.h' | xargs clang-format -i
          git diff --exit-code
